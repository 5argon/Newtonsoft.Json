pool:
  vmImage: 'VS2017-Win2016'

steps:
- powershell: |
    $buildNumber = [int]$Env:BUILD_ID
    write-host "Build number $buildNumber" -fore white
    $basePath = resolve-path .
    $keyPath = "$basePath\key.snk"
    $sign = $false
    if ($Env:KEY_DATA)
    {
        $keyData = [System.Convert]::FromBase64String($Env:KEY_DATA)
        [System.IO.File]::WriteAllBytes($keyPath, $keyData)
        $sign = $true
    }
    write-host "Sign assemblies $sign" -fore white
    $formattedBuildNumber = $buildNumber.ToString("D6")
    $nugetPrerelease = "build$formattedBuildNumber"
    .\Build\runbuild.ps1 -properties @{"signAssemblies"=$sign; "signKeyPath"=$keyPath; "treatWarningsAsErrors"=$true; "nugetPrerelease"=$nugetPrerelease;}
  env:
    KEY_DATA: $(newtonsoft.keyData)
    BUILD_ID: $(Build.BuildId)
  displayName: 'Run build'

- task: PublishTestResults@2
  inputs:
    testRunner: 'NUnit'
    testResultsFiles: '**/Working/*.xml'
  displayName: 'Publish NUnit test results'

- task: PublishTestResults@2
  inputs:
    testRunner: 'VSTest'
    testResultsFiles: '**/Working/*.trx'
  displayName: 'Publish XUnit test results'

- powershell: |
    $branch = [string]$Env:BRANCH_NAME
    write-host "Branch $branch" -fore Green
    if ($branch -eq "master" -and (Test-Path -path ".\Working\NuGet"))
    {
        $apiKey = $Env:MYGET_KEY
        $mainPkg = (get-childitem .\Working\NuGet | Where {$_.Extension -eq ".nupkg" -and !$_.Name.Contains(".symbols.") } | select -first 1).FullName
        write-host
        write-host "Pushing package $mainPkg to myget" -fore Green
        .\Build\Temp\nuget.exe push $mainPkg $apiKey -Source https://www.myget.org/F/json-net/api/v2/package
    }
  env:
    MYGET_KEY: $(newtonsoft.mygetKey)
    BRANCH_NAME: $(Build.SourceBranchName)
  displayName: 'Publish NuGet package'
